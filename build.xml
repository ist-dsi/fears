<?xml version="1.0" encoding="utf-8" ?>
<project name="Fears" default="compile" basedir=".">
  <description>
    Fears build file.  This is used to package up your project as a jar,
    if you want to distribute it.  This isn't needed for normal operation.
  </description>

  <property name="src.dir" location="src"/>
  <property name="src.gen.dir" location="src_gen"/>
  <property name="java.src.dir" location="${src.dir}/java"/>
  <property name="dml.src.dir" location="${src.dir}/dml"/>
  <property name="webapp.src.dir" location="${src.dir}/webapp"/>
  <property name="build.dir" location="bin"/>
  <property name="lib.dir" location="lib"/>
  <property name="config.dir" location="config"/>
  <property name="deploy.lib.dir" location="deploy-lib"/>
  <property name="build.webapp.dir" location="webapp"/>
  <property name="www.dir" location="www"/>
  <property name="fears.dml" location="${dml.src.dir}/fears.dml"/>
  <property name="dml.fenix.sqltypes" value="${config.dir}/dataTypesJDBCTypes.properties"/>
  <property name="dml.fenix.typeconverters" value="${config.dir}/dataTypeConversors.properties"/>


  <!-- set classpath -->
  <path id="project.class.path">
    <pathelement path="${java.class.path}/"/>
    <pathelement path="lib/gwt-user.jar"/>
    <!-- Additional dependencies (such as junit) go here -->
  </path>


  <target name="generate-domain" description="Generates the domain classes">
    <mkdir dir="${src.gen.dir}"/>
    <java classname="dml.DmlCompiler" fork="true">
      <jvmarg value="-Ddml.fenix.sqltypes=${dml.fenix.sqltypes}"/>
      <jvmarg value="-Ddml.fenix.typeconverters=${dml.fenix.typeconverters}"/>
      <arg value="-f"/>
      <arg value="-d"/>
      <arg value="${java.src.dir}"/>
      <arg value="-db"/>
      <arg value="${src.gen.dir}"/>
      <!-- <arg value="-gf"/> -->
      <arg value="-generator"/>
      <arg value="dml.FenixCodeGeneratorReadFromRs"/>
      <arg value="${fears.dml}"/>
      <classpath>
        <fileset dir="${deploy.lib.dir}">
          <include name="dml.jar"/>
          <include name="antlr.jar"/>
        </fileset>
      </classpath>
    </java>
  </target>


  <target name="compile" depends="generate-domain" description="Compile src to bin">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}" extdirs="${lib.dir}:${deploy.lib.dir}" debug="on" debuglevel="lines,vars,source">
      <src path="${java.src.dir}"/>
      <src path="${src.gen.dir}"/>
    </javac>

    <java classname="pt.ist.fenixframework.pstm.PostProcessDomainClasses" 
          dir="${build.dir}"
          fork="true">
      <classpath>
        <pathelement path="${build.dir}"/>
        <fileset dir="${lib.dir}"/>
        <fileset dir="${deploy.lib.dir}"/>
      </classpath>
      <arg value="-d"/>
      <arg value="${fears.dml}"/>
    </java>
  </target>

  <target name="clean">
    <!-- Delete the bin directory tree -->
    <delete dir="${build.dir}"/>
    <delete dir="${build.webapp.dir}"/>
    <delete dir="${www.dir}"/>
    <delete dir="${src.gen.dir}"/>
  </target>
	
  <target name="run linux" depends="compile">
    <exec executable="Fears-shell-linux.sh"/> 
  </target>

  <target name="compile-javascript" depends="compile">
    <java classname="com.google.gwt.dev.GWTCompiler" fork="true">
      <classpath>
        <pathelement path="${java.src.dir}"/>
        <pathelement path="${build.dir}"/>
        <fileset dir="${lib.dir}"/>
      </classpath>
      <arg value="-style"/>
      <arg value="DETAILED"/>
      <arg value="-out"/>
      <arg value="${www.dir}"/>
      <arg value="eu.ist.fears.Fears"/>
    </java>
  </target>

  <target name="build-webapp" depends="compile-javascript">
    <mkdir dir="${build.webapp.dir}"/>
    <mkdir dir="${build.webapp.dir}/WEB-INF"/>
    <mkdir dir="${build.webapp.dir}/WEB-INF/lib"/>
    <mkdir dir="${build.webapp.dir}/WEB-INF/classes"/>
    <copy todir="${build.webapp.dir}/WEB-INF">
      <fileset dir="${webapp.src.dir}" />
    </copy>
    <copy todir="${build.webapp.dir}/WEB-INF/lib">
      <fileset dir="${deploy.lib.dir}" />
    </copy>
    <copy todir="${build.webapp.dir}/WEB-INF/classes">
      <fileset dir="${build.dir}" />
      <fileset dir="${dml.src.dir}" />
    </copy>
    <copy todir="${build.webapp.dir}">
      <fileset dir="${www.dir}/eu.ist.fears.Fears" />
    </copy>
  </target>
	
</project>
